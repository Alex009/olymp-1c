Перем ТипБулево;
Перем ТипЧисло;
Перем ФлагНашли;
Перем ТаблицаСписания;

Функция ПолучитьТаблицуДопустимыхОпераций(ТаблицаРасход, КоличествоОстаток) 
	
	ОбщийСписокВариантов = ТаблицаРасход.Скопировать();
	ОбщийСписокВариантов.Очистить();
	
	Для Каждого СтрокаТЧ из ТаблицаРасход Цикл
		
		Если СтрокаТЧ.Флаг Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ОбщийСписокВариантов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
		
	КонецЦикла;
		
	СписокДопустимыхОпераций 	= Новый СписокЗначений;
	
	Для Каждого Строка1 из ОбщийСписокВариантов Цикл
		
		БуфКоличество = КоличествоОстаток;
		
		Если Строка1.Количество > БуфКоличество Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйСписокОпераций = Новый ТаблицаЗначений;
		НовыйСписокОпераций.Колонки.Добавить("Регистратор");
		НовыйСписокОпераций.Колонки.Добавить("Количество", ТипЧисло);
		
		СписокДопустимыхОпераций.Добавить(НовыйСписокОпераций);
		
		НоваяСтрока = НовыйСписокОпераций.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка1);
		
		БуфКоличество = БуфКоличество - Строка1.Количество;
		
		Если БуфКоличество = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого Строка2 Из ОбщийСписокВариантов Цикл
			Если Строка1.Регистратор = Строка2.Регистратор Тогда
				Продолжить;
			КонецЕсли;
			
			Если Строка2.Количество > БуфКоличество Тогда
				Продолжить;
			КонецЕсли;			
			
			НоваяСтрока = НовыйСписокОпераций.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка2);
			БуфКоличество = БуфКоличество - Строка2.Количество;
		
			Если БуфКоличество = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	НовыйСписокОпераций = Новый ТаблицаЗначений;
	НовыйСписокОпераций.Колонки.Добавить("Регистратор");
	НовыйСписокОпераций.Колонки.Добавить("Количество", ТипЧисло);
	
	СписокДопустимыхОпераций.Добавить(НовыйСписокОпераций);
	
	Возврат СписокДопустимыхОпераций;	
КонецФункции
 
Процедура РассчитатьДеревоРешений(ТаблицаПриход, ТаблицаРасход, НомерСтрокиПриход = 0, 
									КоличествоСтрокПриход, Знач КоличествоОстаток = 0, Знач СуммаОстаток = 0, Знач НайденнаяСумма = 0)
	
	Если НомерСтрокиПриход = КоличествоСтрокПриход Тогда
		Возврат;
	КонецЕсли;
	
	ОбрабатываемаяСтрока = ТаблицаПриход[НомерСтрокиПриход];
	
	КоличествоОстаток = ОбрабатываемаяСтрока.Количество + КоличествоОстаток;
	СуммаОстаток = ОбрабатываемаяСтрока.Сумма + СуммаОстаток;
	
	МассивНайденныхСтрок = Новый Массив;
	СписокДопустимыхОпераций = ПолучитьТаблицуДопустимыхОпераций(ТаблицаРасход, КоличествоОстаток);
	Для Каждого ЭлементСписка из СписокДопустимыхОпераций Цикл
		ТаблицаДопустимыхОпераций = ЭлементСписка.Значение;
		ТаблицаДопустимыхОпераций.Колонки.Добавить("Цена", ТипЧисло);
		ТаблицаДопустимыхОпераций.Колонки.Добавить("Сумма", ТипЧисло);
		
		МассивНайденныхСтрок.Очистить();
		ВсегоСписать = 0;
		
		СуммаТекущегоУровня = 0;
		СуммаОстатокБуф = СуммаОстаток;
		КоличествоОстатокБуф = КоличествоОстаток;
		
		Для Каждого СтрокаТаблицы из ТаблицаДопустимыхОпераций Цикл
			
			ВсегоСписать = ВсегоСписать + СтрокаТаблицы.Количество;
			НайденнаяСтрока = ТаблицаРасход.Найти(СтрокаТаблицы.Регистратор, "Регистратор");
			НайденнаяСтрока.Флаг = Истина;
			МассивНайденныхСтрок.Добавить(НайденнаяСтрока);
			
			СтрокаТаблицы.Цена = СуммаОстатокБуф / КоличествоОстатокБуф;
			СтрокаТаблицы.Сумма = СтрокаТаблицы.Количество * СтрокаТаблицы.Цена;
			СуммаТекущегоУровня = СуммаТекущегоУровня + СтрокаТаблицы.Сумма;
			
			СуммаОстатокБуф = СуммаОстатокБуф - СтрокаТаблицы.Сумма;
			КоличествоОстатокБуф = КоличествоОстатокБуф - СтрокаТаблицы.Количество;
			
		КонецЦикла;	
		
		БуфНайденнаяСумма = НайденнаяСумма + СуммаТекущегоУровня;
		
		Если Окр(БуфНайденнаяСумма, 2) = СуммаСписания И ТаблицаРасход.Найти(Ложь, "Флаг") = Неопределено Тогда
			ФлагНашли = Истина;
		ИначеЕсли БуфНайденнаяСумма < СуммаСписания Тогда
			РассчитатьДеревоРешений(ТаблицаПриход, ТаблицаРасход, НомерСтрокиПриход + 1, 
										КоличествоСтрокПриход, КоличествоОстатокБуф, 
										СуммаОстатокБуф, БуфНайденнаяСумма);
		КонецЕсли;
		
		Если ФлагНашли Тогда
			НоваяСтрока = ТаблицаСписания.Добавить();
			НоваяСтрока.Период = ОбрабатываемаяСтрока.Период;
			НоваяСтрока.Материалы = ТаблицаДопустимыхОпераций;
			Возврат;
		КонецЕсли;
		
		Для Каждого СтрокаТаблицы из МассивНайденныхСтрок Цикл
			
			СтрокаТаблицы.Флаг = Ложь;
			
		КонецЦикла;	
		
		ОбработкаПрерыванияПользователя();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОсновнаяПанельСформировать(Кнопка)
	
	Если Материал = Справочники.Материалы.ПустаяСсылка() Тогда
		Предупреждение("Укажите материал!");
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос("ВЫБРАТЬ
							|	ЖурналОперацийОбороты.Период КАК Период,
							|	ЖурналОперацийОбороты.КоличествоОборотДт КАК Количество,
							|	ЖурналОперацийОбороты.СуммаОборотДт КАК Сумма,
							|	ЖурналОперацийОбороты.СуммаОборотДт / ЖурналОперацийОбороты.КоличествоОборотДт КАК Цена
							|ИЗ
							|	РегистрБухгалтерии.ЖурналОпераций.Обороты(, , День, Счет = &Счет, , Субконто1 = &Материал, , ) КАК ЖурналОперацийОбороты
							|
							|УПОРЯДОЧИТЬ ПО
							|	Период");	

	Запрос.УстановитьПараметр("Счет", ПланыСчетов.ПланСчетов.Материалы);
	Запрос.УстановитьПараметр("Материал", Материал);
	
	ТаблицаПриход = Запрос.Выполнить().Выгрузить();
	
	Запрос.Текст = "ВЫБРАТЬ
					|	ЖурналОперацийОбороты.Регистратор,
					|	ЖурналОперацийОбороты.КоличествоОборотКт КАК Количество
					|ИЗ
					|	РегистрБухгалтерии.ЖурналОпераций.Обороты(, , Регистратор, Счет = &Счет, , Субконто1 = &Материал, , ) КАК ЖурналОперацийОбороты";
	
	ТаблицаРасход = Запрос.Выполнить().Выгрузить();
	ТаблицаРасход.Колонки.Добавить("Флаг", ТипБулево);
	
	Если ТаблицаПриход.Итог("Количество") < ТаблицаРасход.Итог("Количество") Тогда
		Предупреждение("Поступившее количество меньше списанного количества. Списание не возможно.");
		Возврат;
	КонецЕсли;
	
	ТаблицаСписания = Новый ТаблицаЗначений;
	ТаблицаСписания.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ТаблицаСписания.Колонки.Добавить("Материалы", Новый ОписаниеТипов("ТаблицаЗначений"));
	
	ФлагНашли = Ложь;
	НайденнаяСумма = 0;
	РассчитатьДеревоРешений(ТаблицаПриход, ТаблицаРасход,,ТаблицаПриход.Количество());	
	
	ТаблицаСписания.Сортировать("Период Возр");
	
	Макет = ПолучитьМакет("Отчет");
	ДокументРезультат = ЭлементыФормы.ДокументРезультат;
	ДокументРезультат.Очистить();
	
	Если Не ФлагНашли Тогда
		СтрокаБезВариантов = Макет.ПолучитьОбласть("СтрокаБезВариантов");
		ДокументРезультат.Вывести(СтрокаБезВариантов);
		Возврат;	
	КонецЕсли;
	
	ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	СтрокаПодвал = Макет.ПолучитьОбласть("СтрокаПодвал");
	
	ШапкаТаблицы.Параметры.Материал = Материал;
	ШапкаТаблицы.Параметры.СуммаСписания = Формат(СуммаСписания, "ЧДЦ=2");
	
	ДокументРезультат.Вывести(ШапкаТаблицы);
	
	СуммаРасход = 0;
	КоличествоРасход = 0;
	
	Для Каждого СтрокаПриход Из ТаблицаПриход Цикл
		
		Для Сч = 0 По СтрокаТаблицы.Параметры.Количество() - 1 Цикл
			СтрокаТаблицы.Параметры[Сч] = "";
		КонецЦикла;
		
		СтрокаТаблицы.Параметры.Период = СтрокаПриход.Период;
		СтрокаТаблицы.Параметры.КоличествоПриход = СтрокаПриход.Количество;
		СтрокаТаблицы.Параметры.ЦенаПриход = СтрокаПриход.Цена;
		СтрокаТаблицы.Параметры.СуммаПриход = СтрокаПриход.Сумма;
		
		НайденнаяСтрока = ТаблицаСписания.Найти(СтрокаПриход.Период, "Период");
		
		Если НайденнаяСтрока <> Неопределено И НайденнаяСтрока.Материалы.Количество() > 0 Тогда
			
			Для Каждого СтрокаРасход из НайденнаяСтрока.Материалы Цикл
				
				СтрокаТаблицы.Параметры.КоличествоРасход = СтрокаРасход.Количество;
				СтрокаТаблицы.Параметры.ЦенаРасход = СтрокаРасход.Цена;
				СтрокаТаблицы.Параметры.СуммаРасход = СтрокаРасход.Сумма;
				ДокументРезультат.Вывести(СтрокаТаблицы);
				Для Сч = 0 По СтрокаТаблицы.Параметры.Количество() - 1 Цикл
					СтрокаТаблицы.Параметры[Сч] = "";
				КонецЦикла;
				КоличествоРасход = КоличествоРасход + СтрокаРасход.Количество;
				СуммаРасход = СуммаРасход + СтрокаРасход.Сумма;
				
			КонецЦикла;
		Иначе	
			ДокументРезультат.Вывести(СтрокаТаблицы);
		КонецЕсли;	
			
	КонецЦикла;
	
	СтрокаПодвал.Параметры.ИтогоСуммаПриход = ТаблицаПриход.Итог("Сумма");
	СтрокаПодвал.Параметры.ИтогоКоличествоПриход = ТаблицаПриход.Итог("Количество");
	
	СтрокаПодвал.Параметры.ИтогоСуммаРасход = СуммаРасход;
	СтрокаПодвал.Параметры.ИтогоКоличествоРасход = КоличествоРасход;
	
	ДокументРезультат.Вывести(СтрокаПодвал);	
	
КонецПроцедуры

ТипБулево = Новый ОписаниеТипов("Булево");
ТипЧисло = Новый ОписаниеТипов("Число");
