
Процедура КнопкаСформироватьНажатие(Кнопка)
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	
	Макет = ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗапись = Макет.ПолучитьОбласть("Запись");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	
	// Получаем данные из базы и формируем начальные структуры
	СтартДанные = Новый Структура;
	СтартДанные.Вставить("Сумма",0);
	// Дата
	СтартДата = Дата;
	// Сальдо
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
			|	ЖурналОперацийОстатки.СуммаОстаток
			|ИЗ
			|	РегистрБухгалтерии.ЖурналОпераций.Остатки(&Дата, Счет.Код = ""51"", , ) КАК ЖурналОперацийОстатки";
	Запрос.УстановитьПараметр("Дата", Дата);
	Результат = Запрос.Выполнить().Выбрать();
	
	Результат.Следующий();
	СтартСальдо = Результат.СуммаОстаток;
	// Поставщики
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЖурналОперацийОстатки.Субконто1,
		|	ПРЕДСТАВЛЕНИЕ(ЖурналОперацийОстатки.Субконто1),
		|	ЖурналОперацийОстатки.Субконто2 КАК Субконто2,
		|	ПРЕДСТАВЛЕНИЕ(ЖурналОперацийОстатки.Субконто2),
		|	ЖурналОперацийОстатки.СуммаОстатокКт,
		|	Договоры.ДатаОплаты КАК ДатаОплаты,
		|	Договоры.Процент
		|ИЗ
		|	РегистрБухгалтерии.ЖурналОпераций.Остатки(&Дата, Счет.Код = ""60"", , ) КАК ЖурналОперацийОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Договоры КАК Договоры
		|		ПО ЖурналОперацийОстатки.Субконто2 = Договоры.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОплаты,
		|	Субконто2";
	Запрос.УстановитьПараметр("Дата", Дата);
	Результат = Запрос.Выполнить().Выбрать();
	
	Поставщики = Новый Массив;
	Пока Результат.Следующий() Цикл
		Запись = Новый Структура;
		Запись.Вставить("Дата",Результат.ДатаОплаты);
		Запись.Вставить("Договор",Результат.Субконто2);
		Запись.Вставить("Сумма",Результат.СуммаОстатокКт);
		Запись.Вставить("Штраф",Результат.Процент);
		
		Поставщики.Добавить(Запись);
	КонецЦикла;
	СтартДанные.Вставить("Поставщики",Поставщики);
	// Покупатели
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЖурналОперацийОстатки.Субконто1,
		|	ПРЕДСТАВЛЕНИЕ(ЖурналОперацийОстатки.Субконто1),
		|	ЖурналОперацийОстатки.Субконто2 КАК Субконто2,
		|	ПРЕДСТАВЛЕНИЕ(ЖурналОперацийОстатки.Субконто2),
		|	ЖурналОперацийОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
		|	Договоры.ДатаОплаты КАК ДатаОплаты
		|ИЗ
		|	РегистрБухгалтерии.ЖурналОпераций.Остатки(&Дата, Счет.Код = ""62"", , ) КАК ЖурналОперацийОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Договоры КАК Договоры
		|		ПО ЖурналОперацийОстатки.Субконто2 = Договоры.Ссылка
		|ГДЕ
		|	Договоры.ДатаОплаты >= &Дата
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОплаты,
		|	Субконто2";
	Запрос.УстановитьПараметр("Дата", Дата);
    Результат = Запрос.Выполнить().Выбрать();

	Покупатели = Новый Массив;
	Пока Результат.Следующий() Цикл
		Запись = Новый Структура;
		Запись.Вставить("Дата",Результат.ДатаОплаты);
		Запись.Вставить("Договор",Результат.Субконто2);
		Запись.Вставить("Сумма",Результат.СуммаОстатокДт);
		
		Покупатели.Добавить(Запись);
	КонецЦикла;
	СтартДанные.Вставить("Покупатели",Покупатели);	
	
	// Планируем расчеты
	Результат = СпланироватьРасчеты(СтартДата,СтартСальдо,СтартДанные);
	
	ТабДок.Очистить();
	
	Если Результат = Неопределено Тогда
		Сообщить("Не хватает средств для оплаты долгов");
	Иначе
		
		ОбластьЗаголовок.Параметры[0] = "Планируемый график платежей по состоянию на " + Дата;
		ТабДок.Вывести(ОбластьЗаголовок);
		         
		ПОЛУЧЕНИЕ_ДЕНЕГ = 0;
		ВЫПЛАТА_ДЕНЕГ = 1;

		ПокупателиИтог = 0;
		ПоставщикиИтог = 0;
		Для Каждого Вершина Из Результат.Путь Цикл
			ОбластьЗапись.Параметры[0] = Вершина.Дата;
			ОбластьЗапись.Параметры[1] = Вершина.Сальдо;
			Если Вершина.Действие = ПОЛУЧЕНИЕ_ДЕНЕГ Тогда
				ОбластьЗапись.Параметры[2] = Вершина.Покупатель.Договор;
				ОбластьЗапись.Параметры[3] = Вершина.Покупатель.Сумма;
				ОбластьЗапись.Параметры[4] = "";
				ОбластьЗапись.Параметры[5] = "";
				
				ПокупателиИтог = ПокупателиИтог + Вершина.Покупатель.Сумма;
			Иначе
				ОбластьЗапись.Параметры[2] = "";
				ОбластьЗапись.Параметры[3] = "";
				ОбластьЗапись.Параметры[4] = Вершина.Поставщик.Договор;
				ОбластьЗапись.Параметры[5] = Вершина.Поставщик.Оплачено;
				
				ПоставщикиИтог = ПоставщикиИтог + Вершина.Поставщик.Оплачено;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьЗапись);
		КонецЦикла;
		
		ОбластьИтог.Параметры[0] = ПокупателиИтог;
		ОбластьИтог.Параметры[1] = ПоставщикиИтог;
		ТабДок.Вывести(ОбластьИтог);
	КонецЕсли;	
КонецПроцедуры
   
Функция СпланироватьРасчеты(Дата,Сальдо,Данные)	
	ПОЛУЧЕНИЕ_ДЕНЕГ = 0;
	ВЫПЛАТА_ДЕНЕГ = 1;

	Результат = Новый Структура;
	Путь = Новый Массив;
	Результат.Вставить("Сумма",0);
	Результат.Вставить("Путь",Путь);
	
	// проверяем не завершены ли получения и выплаты
	Если Данные.Покупатели.Количество() = 0 И Данные.Поставщики.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	РДата = Дата;
	РСальдо = Сальдо;
	
	// проверяем есть ли деньги на счете для оплаты поставщикам
	Если Сальдо = 0 Тогда 
		Если Данные.Покупатели.Количество() = 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
		// денег нет, выполняем ближайшую получку денег от покупателя и планируем дальше, начиная со следующего после получения денег дня
		Покупатель = Данные.Покупатели[0];
		РДата = НачалоДня(Покупатель.Дата) + (60*60*24);
		РСальдо = Покупатель.Сумма;
		
		// убираем оформленную получку денег
		Данные.Покупатели.Удалить(0);
		// добавляем в путь состояние с получением оплаты
		НовоеСостояние = Новый Структура;
		НовоеСостояние.Вставить("Дата",Покупатель.Дата);
		НовоеСостояние.Вставить("Сальдо",Сальдо);
		НовоеСостояние.Вставить("Действие",ПОЛУЧЕНИЕ_ДЕНЕГ);
		НовоеСостояние.Вставить("Покупатель",Покупатель);
		
		Результат.Путь.Добавить(НовоеСостояние);
	КонецЕсли;
	
	
	ЛучшийРезультат = Неопределено;
	ЛучшийНачало = Неопределено;
	// пробуем разные выплаты поставщикам (обходим их по очереди, выбираем результат с минимальной суммой выплат)
	Для Каждого Поставщик Из Данные.Поставщики Цикл
		НовоеСальдо = 0;
		Начало = Неопределено;
		НовыеДанные = Новый Структура;
		НовыеДанные.Вставить("Поставщики",Новый Массив);
		НовыеДанные.Вставить("Покупатели",Новый Массив);
		Для Каждого Запись Из Данные.Покупатели Цикл
			НоваяЗапись = Новый Структура;
			НоваяЗапись.Вставить("Дата",Запись.Дата);
			НоваяЗапись.Вставить("Договор",Запись.Договор);
			НоваяЗапись.Вставить("Сумма",Запись.Сумма);
			
			НовыеДанные.Покупатели.Добавить(НоваяЗапись);
		КонецЦикла;
		Для Каждого Запись Из Данные.Поставщики Цикл			
			НоваяЗапись = Неопределено;
			Если Поставщик = Запись Тогда
				Штраф = 0;
				Дни = 0;
				
				Если РДата >= Запись.Дата Тогда
					Дни = ((КонецДня(РДата)+1)-НачалоДня(Запись.Дата))/(24*60*60);
					Штраф = (Запись.Сумма * (Запись.Штраф/100)) * Дни;
				КонецЕсли;
				
				Если (Поставщик.Сумма + Штраф) > РСальдо Тогда
					НоваяЗапись = Новый Структура;
					Если Штраф = 0 Тогда
						НоваяЗапись.Вставить("Дата",Запись.Дата);
					Иначе
						НоваяЗапись.Вставить("Дата",(КонецДня(РДата)+1));
					КонецЕсли;
					НоваяЗапись.Вставить("Договор",Запись.Договор);
					НоваяЗапись.Вставить("Сумма",Запись.Сумма + Штраф - РСальдо); 					
					НоваяЗапись.Вставить("Штраф",Запись.Штраф);
 					
					НовоеСальдо = 0;
					
					Начало = Новый Структура;
					Начало.Вставить("Дата",Запись.Дата);
					Начало.Вставить("Договор",Запись.Договор); 					
					Начало.Вставить("Оплачено",РСальдо);
				Иначе
					НовоеСальдо = РСальдо - (Запись.Сумма + Штраф);
					
					Начало = Новый Структура;
					Начало.Вставить("Дата",Запись.Дата);
					Начало.Вставить("Договор",Запись.Договор);
					Начало.Вставить("Оплачено",Запись.Сумма + Штраф);
				КонецЕсли;
			Иначе
				НоваяЗапись = Новый Структура;
				НоваяЗапись.Вставить("Дата",Запись.Дата);
				НоваяЗапись.Вставить("Договор",Запись.Договор);
				НоваяЗапись.Вставить("Сумма",Запись.Сумма); 					
				НоваяЗапись.Вставить("Штраф",Запись.Штраф);
			КонецЕсли;

			Если НоваяЗапись <> Неопределено Тогда
				НовыеДанные.Поставщики.Добавить(НоваяЗапись);
			КонецЕсли;
		КонецЦикла;
		
		РезультатВетки = СпланироватьРасчеты(РДата,НовоеСальдо,НовыеДанные);
		
		Если ЛучшийРезультат <> Неопределено И РезультатВетки <> Неопределено Тогда
			Если (ЛучшийНачало.Оплачено + ЛучшийРезультат.Сумма) > (Начало.Оплачено + РезультатВетки.Сумма) Тогда
				ЛучшийРезультат = РезультатВетки;
				ЛучшийНачало = Начало;
			КонецЕсли;
		Иначе
			ЛучшийРезультат = РезультатВетки;
			ЛучшийНачало = Начало;
		КонецЕсли;	
	КонецЦикла;
	
	Если ЛучшийРезультат = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 	
	
	// найден лучший результат, составляем итоговый результат
	Результат.Сумма = ЛучшийНачало.Оплачено + ЛучшийРезультат.Сумма;
	
	НоваяВершина = Новый Структура;
	НоваяВершина.Вставить("Дата",РДата);
	НоваяВершина.Вставить("Сальдо",РСальдо);
	НоваяВершина.Вставить("Действие",ВЫПЛАТА_ДЕНЕГ);
	НоваяВершина.Вставить("Поставщик",ЛучшийНачало);

	Результат.Путь.Добавить(НоваяВершина); 
	
	Для Каждого Вершина Из ЛучшийРезультат.Путь Цикл
		Результат.Путь.Добавить(Вершина);
	КонецЦикла;
		
	Возврат Результат;
КонецФункции

Процедура ПриОткрытии()
	Дата = Дата(2011,01,15);
КонецПроцедуры
