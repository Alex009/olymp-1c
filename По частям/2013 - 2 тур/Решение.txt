Процедура КнопкаСформироватьНажатие(Кнопка)
	табДок = Новый ТабличныйДокумент;
	СформироватьОтчет(табДок);
	табДок.Показать("Результат");
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчет(табДок)
	// отладка
	ВремяНачала = ТекущаяУниверсальнаяДата();
	
	Макет = ОтчетОбъект.ПолучитьМакет("Макет");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьДанные = Макет.ПолучитьОбласть("Данные");	
	
	табДок.Вывести(ОбластьЗаголовок);
	
	// массив счетов, участвующих в проводках
	СчетаПроводок = Новый Массив();
	// массив соответствий корреспонденции
	ПроводкиСоответствие = Новый Массив();
	// массив "сгруппирован или нет"
	СчетСгруппирован = Новый Массив();
	
	// получаем счета имеющиеся в проводках
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ПланСчетов.Код КАК Код,
	               |	ПланСчетов.Родитель.Код
	               |ИЗ
	               |	ПланСчетов.ПланСчетов КАК ПланСчетов,
	               |	(ВЫБРАТЬ
	               |		РегистрБухгалтерии.СчетДт.Код КАК СчетДтКод,
	               |		РегистрБухгалтерии.СчетКт.Код КАК СчетКтКод
	               |	ИЗ
	               |		РегистрБухгалтерии.РегистрБухгалтерии КАК РегистрБухгалтерии) КАК ВложенныйЗапрос
	               |ГДЕ
	               |	ПланСчетов.Код В (ВложенныйЗапрос.СчетДтКод, ВложенныйЗапрос.СчетКтКод)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Код";
				   
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// получаем код синтетического счета
		СинтетическийСчет = Выборка.Код;
		Если Выборка.РодительКод <> null Тогда
			СинтетическийСчет = Выборка.РодительКод;
		КонецЕсли;
		КодСинтетическогоСчета = Число(СтрЗаменить(СинтетическийСчет,".",""));
		// проверяем не добавлен ли уже счет в массив
		Если СчетаПроводок.Найти(КодСинтетическогоСчета) = Неопределено Тогда
			СчетаПроводок.Добавить(КодСинтетическогоСчета);
			// создаем массив для корреспонденции
			МассивКорреспонденции = Новый Массив();
			ПроводкиСоответствие.Добавить(МассивКорреспонденции);
			// отладка
			//Сообщить("Добавлен счет: " + КодСинтетическогоСчета);
			СчетСгруппирован.Добавить(Ложь);
		КонецЕсли;
	КонецЦикла;
	
	// считываем корреспонденцию
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегистрБухгалтерии.СчетДт.Код,
	               |	РегистрБухгалтерии.СчетДт.Родитель.Код,
	               |	РегистрБухгалтерии.СчетКт.Код,
	               |	РегистрБухгалтерии.СчетКт.Родитель.Код,
	               |	РегистрБухгалтерии.Сумма
	               |ИЗ
	               |	РегистрБухгалтерии.РегистрБухгалтерии КАК РегистрБухгалтерии
	               |ГДЕ
	               |	РегистрБухгалтерии.Сумма <> 0";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	// заполняем массив счетов, учавствующих в проводках
	Пока Выборка.Следующий() Цикл
		// СчетДТ
		СинтетическийСчетДТ = Выборка.СчетДтКод;
		Если Выборка.СчетДтРодительКод <> null Тогда
			СинтетическийСчетДТ = Выборка.СчетДтРодительКод;
		КонецЕсли;
		КодСинтетическогоСчетаДТ = Число(СтрЗаменить(СинтетическийСчетДТ,".",""));
		// СчетКТ
		СинтетическийСчетКТ = Выборка.СчетКтКод;
		Если Выборка.СчетКтРодительКод <> null Тогда
			СинтетическийСчетКТ = Выборка.СчетКтРодительКод;
		КонецЕсли;
		КодСинтетическогоСчетаКТ = Число(СтрЗаменить(СинтетическийСчетКТ,".",""));
		// отладка
		//Сообщить("синтетические счета: " + КодСинтетическогоСчетаДТ + "," + КодСинтетическогоСчетаКТ);		
		// проверяем разные ли счета
		Если КодСинтетическогоСчетаДТ <> КодСинтетическогоСчетаКТ Тогда
			// ищем счета
			СчетДТ = СчетаПроводок.Найти(КодСинтетическогоСчетаДТ);		
			СчетКТ = СчетаПроводок.Найти(КодСинтетическогоСчетаКТ);
			// получаем массивы корреспонденции
			МассивКорреспонденцииДТ = ПроводкиСоответствие.Получить(СчетДТ); 		
			МассивКорреспонденцииКТ = ПроводкиСоответствие.Получить(СчетКТ);
			// проверяем не было ли между ними корреспонденции
			Если МассивКорреспонденцииДТ.Найти(КодСинтетическогоСчетаКТ) = Неопределено Тогда
				// добавляем в массивы данные
				МассивКорреспонденцииДТ.Добавить(КодСинтетическогоСчетаКТ);
			    МассивКорреспонденцииКТ.Добавить(КодСинтетическогоСчетаДТ);
				//Сообщить("Добавлена корреспонденция: " + КодСинтетическогоСчетаДТ + "," + КодСинтетическогоСчетаКТ);		
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	НомерГруппы = 1; 
	КолСчетов = СчетаПроводок.Количество();
	Сгруппированно = 0;
	// Обходим получившуюся корреспонденцию, отмечая сгруппированные счета
	Для Индекс = 0 по СчетаПроводок.ВГраница() Цикл
		// проверяем не сгруппирован ли уже счет
		Если СчетСгруппирован[Индекс] = Истина Тогда
			Продолжить;
		КонецЕсли;
		// получаем данные
		Счет = СчетаПроводок.Получить(Индекс);
		// устанавливаем данные перед обходом
		СчетаВГруппе = Новый Массив();
		СчетаВГруппе.Добавить(Индекс);
		СчетСгруппирован[Индекс] = Истина;
		Сгруппированно = Сгруппированно + 1;
		// отладка
		//Сообщить("Начало группы: " + Счет);
		// обходим счета, в поиске отсутствующих в корреспонденции
		Для Индекс2 = 0 по СчетаПроводок.ВГраница() Цикл
			// проверяем не сгруппирован ли уже счет
			Если СчетСгруппирован[Индекс2] = Истина Тогда
				Продолжить;
			КонецЕсли;
			// получаем данные
			СчетКор = СчетаПроводок.Получить(Индекс2);
			// отладка
			//Сообщить("Проверяем корреспонденцию группы с " + СчетКор);
			// обходим группу
			НеКорреспондирует = 0;
			Для Каждого СчетГруппы Из СчетаВГруппе Цикл
				// получаем его массив корреспонденции
				МассивКорреспонденции = ПроводкиСоответствие.Получить(СчетГруппы);
				// проверяем наличие корреспонденции
				Если МассивКорреспонденции.Найти(СчетКор) = Неопределено Тогда
					// запоминаем что не корреспондирует
					НеКорреспондирует = НеКорреспондирует + 1;
				КонецЕсли;
			КонецЦикла;
			// проверяем, со всеми ли не корреспондирует
			Если НеКорреспондирует = СчетаВГруппе.Количество() Тогда
				// отладка
				//Сообщить("Кореспонденция не найдена");
				// добавляем в группу
				СчетаВГруппе.Добавить(Индекс2);
				// помечаем сгруппированным
				СчетСгруппирован[Индекс2] = Истина;
				Сгруппированно = Сгруппированно + 1;
			КонецЕсли;
		КонецЦикла;
		ГруппыСтр = Строка(Счет);
		Для Индекс3 = 1 по СчетаВГруппе.ВГраница() Цикл
			ИндексСчета = СчетаВГруппе[Индекс3];
			ГруппыСтр = ГруппыСтр + ", " + СчетаПроводок.Получить(ИндексСчета);
		КонецЦикла;		
		// выводим в табличный документ
		ОбластьДанные.Параметры.НомерГруппы = НомерГруппы;  	
		ОбластьДанные.Параметры.Счета = ГруппыСтр; 
		табДок.Вывести(ОбластьДанные);
		// следующая группа
		НомерГруппы = НомерГруппы + 1;
		// проверяем все ли сгруппированы, чтобы не продолжать обход
		Если Сгруппированно = КолСчетов Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// отладка
	ВремяВыполнения = ТекущаяУниверсальнаяДата() - ВремяНачала;
	Сообщить("Время выполнения: " + ВремяВыполнения + " мс");
КонецПроцедуры
